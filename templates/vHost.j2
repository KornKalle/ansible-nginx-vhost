server {
    if ($host = www.{{ NGINX_VHOST_FQDN }}) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    if ($host = {{ NGINX_VHOST_FQDN }}) {
        return 301 https://$host$request_uri;
    } # managed by Certbot
	listen 80;
	server_name www.{{ NGINX_VHOST_FQDN }} {{ NGINX_VHOST_FQDN }};
	rewrite ^ https://$server_name$request_uri? permanent;
}

server {
	listen 443 ssl http2;
	server_name www.{{ NGINX_VHOST_FQDN }} {{ NGINX_VHOST_FQDN }};
	root /var/www/{{ NGINX_VHOST_FQDN }};
    index index.php index.html index.htm default.html default.htm;
    client_max_body_size 32m;

    # Support API
    location /api/ {
	try_files $uri $uri/ /api/index.php?$args;
    }

    # Support Clean (aka Search Engine Friendly) URLs
    location / {
        try_files $uri $uri/ /index.php?$args;
    }

    # add global x-content-type-options header
    add_header X-Content-Type-Options nosniff;

    # deny running scripts inside writable directories
    location ~* /(images|cache|media|logs|tmp)/.*\.(php|pl|py|jsp|asp|sh|cgi)$ {
        return 403;
        error_page 403 /403_error.html;
    }

    location ~ \.php$ {
      fastcgi_pass  127.0.0.1:9000;
      fastcgi_index index.php;
      include fastcgi_params;
      fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
      include /etc/nginx/fastcgi.conf;
    }

    # caching of files
    location ~* \.(ico|pdf|flv)$ {
        expires 1y;
    }

    location ~* \.(js|css|png|jpg|jpeg|gif|swf|xml|txt)$ {
        expires 14d;
    }

	access_log /var/log/nginx/{{ NGINX_VHOST_FQDN }}.access.log;
	error_log /var/log/nginx/{{ NGINX_VHOST_FQDN }}.error.log;

	## SSL
    add_header Strict-Transport-Security max-age=63072000;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA256:EECDH+aRSA+SHA256:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:EECDH+aRSA+SHA384:EDH+aRSA+AESGCM:EDH+aRSA+SHA256:EDH+aRSA:EECDH:!aNULL:!eNULL:!MEDIUM:!LOW:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS:!RC4:!SEED";

	ssl_certificate /etc/letsencrypt/live/{{ NGINX_VHOST_FQDN }}/fullchain.pem; # managed by Certbot
	ssl_certificate_key /etc/letsencrypt/live/{{ NGINX_VHOST_FQDN }}/privkey.pem; # managed by Certbot
}